/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.edu.ifnmg.Radio.Apresentacao;

import br.edu.ifnmg.Radio.Entidade.Anunciante;
import br.edu.ifnmg.Radio.Negocio.AnuncianteBO;
import java.sql.SQLException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.AbstractTableModel;

import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author WellisonTiago
 */
public class RelatorioAnunciante extends javax.swing.JFrame {

    List<Anunciante> anunciantes;
    Anunciante anuncianteSelecionado = new Anunciante ();
     int linhaselecionada;
    /**
     * Creates new form ListarAnunciante
     */
    public RelatorioAnunciante() {
        initComponents();
        exibirDadosTabela();
    }

    private void exibirDadosTabela() {
        try {
            this.carregarListaAnunciante();
            ModeloDadosAnunciantes modelo = new ModeloDadosAnunciantes();
            tblAnunciantes.setModel(modelo);
        } catch (Exception ex) {
            Logger.getLogger(RelatorioAnunciante.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void carregarListaAnunciante() throws SQLException {
        AnuncianteBO anuncianteBO = new AnuncianteBO();
        anunciantes = anuncianteBO.buscarTodos();
    }

    private void exibirMensagemErro(String titulo, String mensagem) {
        titulo = "Erro ao recuperar Anunciantes";
        mensagem = "Erro desconhecido. Entre em contato com administrador";
        JOptionPane.showMessageDialog(this, titulo, mensagem, JOptionPane.ERROR_MESSAGE);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnListarAnunciante = new javax.swing.JInternalFrame();
        txtListarAnunciante = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAnunciantes = new javax.swing.JTable();
        btRelatorio = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnListarAnunciante.setVisible(true);

        txtListarAnunciante.setFont(new java.awt.Font("Traditional Arabic", 0, 36)); // NOI18N
        txtListarAnunciante.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        txtListarAnunciante.setText("Anunciantes");

        tblAnunciantes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblAnunciantes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setViewportView(tblAnunciantes);

        btRelatorio.setText("Relatorio");
        btRelatorio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRelatorioActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnListarAnuncianteLayout = new javax.swing.GroupLayout(pnListarAnunciante.getContentPane());
        pnListarAnunciante.getContentPane().setLayout(pnListarAnuncianteLayout);
        pnListarAnuncianteLayout.setHorizontalGroup(
            pnListarAnuncianteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 740, Short.MAX_VALUE)
            .addComponent(txtListarAnunciante, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnListarAnuncianteLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(321, 321, 321))
        );
        pnListarAnuncianteLayout.setVerticalGroup(
            pnListarAnuncianteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnListarAnuncianteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtListarAnunciante)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(btRelatorio, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnListarAnunciante)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnListarAnunciante)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btRelatorioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRelatorioActionPerformed
        
     
    try {
            String arquivoRelatorio = System.getProperty("user.dir")
                    + "/Relatorios/RelatorioAnu.jasper";
               
            Map<String, Object> paramentros = new HashMap<String, Object>();

            JRBeanCollectionDataSource fonteDados
                    = new JRBeanCollectionDataSource(this.anunciantes);

            JasperPrint relatorioGerado = JasperFillManager.fillReport(arquivoRelatorio, paramentros, fonteDados);

            JasperViewer telaExibicaoRelatorio
                    = new JasperViewer(relatorioGerado, false);
            telaExibicaoRelatorio.setTitle("Relatório de Anunciantes");
            telaExibicaoRelatorio.setVisible(true);
        } catch (JRException ex) {
            Logger.getLogger(ListarAnunciante.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(this, "Erro ao exibir relatório.", "Erro", JOptionPane.ERROR_MESSAGE);

        }
    }//GEN-LAST:event_btRelatorioActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RelatorioAnunciante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RelatorioAnunciante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RelatorioAnunciante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RelatorioAnunciante.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RelatorioAnunciante().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btRelatorio;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JInternalFrame pnListarAnunciante;
    private javax.swing.JTable tblAnunciantes;
    private javax.swing.JLabel txtListarAnunciante;
    // End of variables declaration//GEN-END:variables

    class ModeloDadosAnunciantes extends AbstractTableModel {

        @Override
        public int getRowCount() {
            return anunciantes.size();
        }

        @Override
        public String getColumnName(int column) {
            if (column == 0) {
                return "Id Anunciante";
            } else if (column == 1) {
                return "NOME";
            } else if (column == 2) {
                return "CPF";
            } else if (column == 3) {
                return "TELEFONE";
            } else if (column == 4) {
                return "RUA";
            } else if (column == 5) {
                return "BAIRRO";
            } else if (column == 6) {
                return "CIDADE";
            } else {
                return "NUMRESIDENCIA";
            }
        }

        @Override
        public int getColumnCount() {
            return 8;
        }

        @Override
        public Object getValueAt(int rowIndex, int columnIndex) {
            Anunciante anunciante = anunciantes.get(rowIndex);
            if (columnIndex == 0) {
                return anunciante.getIdAnunciante();
            } else if (columnIndex == 1) {
                return anunciante.getNome();
            } else if (columnIndex == 2) {
                return anunciante.getCpf();
            } else if (columnIndex == 3) {
                return anunciante.getTelefone();
            } else if (columnIndex == 4) {
                return anunciante.getRua();
            } else if (columnIndex == 5) {
                return anunciante.getBairro();

            } else if (columnIndex == 6) {
                return anunciante.getCidade();

            } else {
                return anunciante.getNumResidencia();

            }

        }

    }
}
